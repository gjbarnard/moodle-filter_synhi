{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template filter_synhi/setting_highlight

    Setting highlight.

    Context variables required for this template:
    * labelfor - id of the form element
    * title - Setting title
    * name - Setting name

    Example context (json):
    {
        "title": "Setting title",
        "name": "Name",
        "description": "Description goes here",
        "code": "<code>echo 'Code to highlight';</code>",
        "highlightdata": {
            "thejs": "Moodle url",
            "thecss": "Moodle url",
            "theinit": "Init JS"
        }
    }
}}
<div class="form-item row">
    <div class="form-label col-sm-3 text-sm-right">
        <label>
            {{{title}}}
        </label>
    </div>
    <div class="form-setting col-sm-9">
        <div class="form-description">{{{description}}}</div>
        <div class="row">
            <div class="col-12">
                {{#highlightdata}}
                {{> filter_synhi/setting_highlight_example }}
                {{/highlightdata}}
                {{#broken}}
                {{{broken}}}
                {{/broken}}
            </div>
        </div>
    </div>
</div>
{{#js}}
require(['jquery', 'core/ajax', 'core/notification', 'core/log'],
    function($, Ajax, Notification, log) {

    var updateExample = function(engine, style) {
        Ajax.call([{
            methodname: 'filter_synhi_setting_highlight_example',
            args: {
                'engine': engine,
                'style': style
            },
        }])[0].done(function(response) {
            log.debug(response.markup);
            // We have the data now update the UI.
            $('#setting_highlight_example_wrapper').replaceWith(response.markup);
        }).fail(function() {
                Notification.exception(new Error('Failed to get highlighted markup'));
                return;
        });
    };

    log.debug($("#id_s_filter_synhi_engine").val());
    $('#id_s_filter_synhi_engine').change(function() {
        log.debug(this.value);

        if (this.value == 'enlighterjs') {
            updateExample(this.value, $("#id_s_filter_synhi_enlighterjsstyle").val());
        } else if (this.value == 'syntaxhighlighter') {
            updateExample(this.value, $("#id_s_filter_synhi_syntaxhighlighterstyle").val());
        }
    });

    $('#id_s_filter_synhi_enlighterjsstyle').change(function() {
        var engine = $("#id_s_filter_synhi_engine").val();
        if (engine == 'enlighterjs') {
            updateExample(engine, this.value);
        }
    });

    $('#id_s_filter_synhi_syntaxhighlighterstyle').change(function() {
        var engine = $("#id_s_filter_synhi_engine").val();
        if (engine == 'syntaxhighlighter') {
            updateExample(engine, this.value);
        }
    });
});
{{/js}}
